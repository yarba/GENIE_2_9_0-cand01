#! /usr/bin/perl -w
#
# Creates the $GENIE/src/Conventions/GVersion.h header file
#
# C.Andreopoulos <costas.andreopoulos \at stfc.ac.uk>, Rutherford Lab.
#

$GENIE = $ENV{'GENIE'};
die ("Not even the GENIE environmental variable is defined!") unless defined $GENIE;

# Read version info
open(REL_INFO, "<$GENIE/VERSION") or die("Can not read the GENIE release information!");
@rel_info=<REL_INFO>;
close(REL_INFO);
chomp($release = $rel_info[0]);

# ($major, $minor, $rev) = split('.', $release);
# note: split() doesn't split on dots...
$release=~m/(\d+).(\d+).(\d+)/;
$major = $1;
$minor = $2;
$revis = $3;

# Get the SVN revision number 
$svn_revision = `svn info | grep -i revision`;
if($? == 0) {
  # remove any non-digit
  $svn_revision =~ s/\D+\s+//;
} else {
  # Couldn't run svn info. 
  # This may be a user without svn who installs GENIE from a tarball.
  # Try to extract the revision number from $GENIE/.svn/entries
  $svn_revision = -1;  
  if (open(SVN_ENTRIES, "<$GENIE/.svn/entries")) { 
    @svn_entries = <SVN_ENTRIES>;
    close(SVN_ENTRIES);
    chomp($svn_revision = $svn_entries[3]); # the rev number seems to be at the 4th line
  }
}

# Open header file
$GVRS_FILE = "$GENIE/src/Conventions/GVersion.h";
open(GVRS, ">$GVRS_FILE") or die("Can not write out the GVersion.h file!");

# Write header file
print GVRS "#ifndef _GVERSION_H_ \n";
print GVRS "#define _GVERSION_H_ \n";
print GVRS "/* \n";
print GVRS " * Version information automatically generated by the GENIE installer \n";
print GVRS " * \n";
print GVRS " * These macros can be used in the following way (as the ones at ROOT's RVersion.h): \n";
print GVRS " * #if __GENIE_RELEASE_CODE__ >= GRELCODE(2,4,11) \n";
print GVRS " * #include <newheader.h>\n";
print GVRS " * #else\n";
print GVRS " * #include <oldheader.h>\n";
print GVRS " * #endif\n";
print GVRS "*/ \n\n";
print GVRS "#define GRELCODE(a,b,c) (((a) << 16) + ((b) << 8) + (c)) \n\n";
print GVRS "#define __GENIE_RELEASE__      \"$release\"\n";
print GVRS "#define __GENIE_RELEASE_CODE__ GRELCODE($major,$minor,$revis) \n\n";

# print the commit number even if it is unresolved (-1) -> that flags that it is unresolved...
print GVRS "#define __GENIE_SVN_REVISION__ $svn_revision \n\n";

if($major == 999 && $minor == 999 && $revis == 999) {
  print GVRS "#define __GENIE_DEVEL_VERSION__ \n\n";
}
# We have odd-numbered releases now, so comment this out (delete soon).
# New convention for beta releases?
# else {
#   if($minor % 2) {
#      print GVRS "#define __GENIE_RELEASE_CANDIDATE__ \n\n";
#   }
# }

if ($svn_revision != -1 ) {
  $svn_differences = `svn status -q`;
  if($? == 0) {
    print GVRS "/* \n";
    print GVRS " * SVN differences at compile time: \n";
    print GVRS "$svn_differences";
    print GVRS "*/ \n\n";
  }
}
  
print GVRS "#endif\n\n";

# Close header file
close(GVRS);


